apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  labels:
    app: tfc-api
  name: tfc-api
  namespace: tfc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tfc-api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tfc-api
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
                - key: node-role.kubernetes.io/controlplane
                  operator: DoesNotExist
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - varnish
                topologyKey: "kubernetes.io/hostname"
              weight: 1
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - tfc-api
                topologyKey: "kubernetes.io/hostname"
              weight: 10
      containers:
      - image: docker.gitlab.liip.ch/chregu/repo/tfc-api:latest
        name: tfc-api
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "568Mi"
            cpu: "2000m"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        imagePullPolicy: Always
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
status: {}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tfc-api
  namespace: tfc
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tfc-api
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 1000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    cert-manager.io/issuer-kind: ClusterIssuer
    #kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    # there are problems with 308 redirects when going through cloudflare, no idea why, so we don't...
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    #nginx.ingress.kubernetes.io/secure-backends: "true"

  name: tfc
  namespace: tfc
spec:
  rules:
    - host: tfc.chregu.tv
      http:
        paths:
          - backend:
              serviceName: tfc-api
              servicePort: 3000
  tls:
    - hosts:
        - tfc.chregu.tv
      secretName: tfc-chregu-tv-cert
---
apiVersion: v1
kind: Service
metadata:
  name: tfc-api
  namespace: tfc
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: tfc-api
